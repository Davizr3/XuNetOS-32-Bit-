     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_api_initmalloc
     7 00000000                                 	EXTERN	_api_malloc
     8 00000000                                 	EXTERN	_api_openwin
     9 00000000                                 	EXTERN	_api_alloctimer
    10 00000000                                 	EXTERN	_api_inittimer
    11 00000000                                 	EXTERN	_asm_cpuid
    12 00000000                                 	EXTERN	_api_putstrwin
    13 00000000                                 	EXTERN	_sprintf
    14 00000000                                 	EXTERN	_asm_rdtsc
    15 00000000                                 	EXTERN	_api_settimer
    16 00000000                                 	EXTERN	_api_getkey
    17 00000000                                 	EXTERN	_api_boxfilwin
    18 00000000                                 	EXTERN	_api_end
    19 00000000                                 [FILE "cpuid.c"]
    20                                          [SECTION .data]
    21 00000000                                 LC0:
    22 00000000 63 70 75 69 64 20 66 6F 72 20   	DB	"cpuid for XuNet OS",0x00
       0000000A 48 65 6C 6F 20 4F 53 00 
    23 00000012                                 LC1:
    24 00000012 46 61 6D 69 6C 79 20 3D 20 25   	DB	"Family = %Xh, Model = %Xh, Stepping = %Xh",0x00
       0000001C 58 68 2C 20 4D 6F 64 65 6C 20 
       00000026 3D 20 25 58 68 2C 20 53 74 65 
       00000030 70 70 69 6E 67 20 3D 20 25 58 
       0000003A 68 00 
    25 0000003C                                 LC3:
    26 0000003C 43 6C 6F 63 6B 20 3D 20 25 64   	DB	"Clock = %dMHz",0x00
       00000046 4D 48 7A 00 
    27 0000004A                                 LC2:
    28 0000004A 46 61 6D 69 6C 79 45 78 20 3D   	DB	"FamilyEx = %Xh, ModelEx = %Xh, SteppingEx = %Xh",0x00
       00000054 20 25 58 68 2C 20 4D 6F 64 65 
       0000005E 6C 45 78 20 3D 20 25 58 68 2C 
       00000068 20 53 74 65 70 70 69 6E 67 45 
       00000072 78 20 3D 20 25 58 68 00 
    29                                          [SECTION .text]
    30 00000000                                 	GLOBAL	__main
    31 00000000                                 __main:
    32 00000000 55                              	PUSH	EBP
    33 00000001 89 E5                           	MOV	EBP,ESP
    34 00000003 57                              	PUSH	EDI
    35 00000004 56                              	PUSH	ESI
    36 00000005 53                              	PUSH	EBX
    37 00000006 8D B5 FFFFFEA4                  	LEA	ESI,DWORD [-348+EBP]
    38 0000000C 81 EC 0000018C                  	SUB	ESP,396
    39 00000012 89 F7                           	MOV	EDI,ESI
    40 00000014 E8 [00000000]                   	CALL	_api_initmalloc
    41 00000019 68 00017700                     	PUSH	96000
    42 0000001E E8 [00000000]                   	CALL	_api_malloc
    43 00000023 68 [00000000]                   	PUSH	LC0
    44 00000028 68 000000FF                     	PUSH	255
    45 0000002D 6A 78                           	PUSH	120
    46 0000002F 68 00000190                     	PUSH	400
    47 00000034 50                              	PUSH	EAX
    48 00000035 E8 [00000000]                   	CALL	_api_openwin
    49 0000003A 89 85 FFFFFE80                  	MOV	DWORD [-384+EBP],EAX
    50 00000040 E8 [00000000]                   	CALL	_api_alloctimer
    51 00000045 68 00000080                     	PUSH	128
    52 0000004A 50                              	PUSH	EAX
    53 0000004B 89 85 FFFFFE7C                  	MOV	DWORD [-388+EBP],EAX
    54 00000051 E8 [00000000]                   	CALL	_api_inittimer
    55 00000056 8D 85 FFFFFEA0                  	LEA	EAX,DWORD [-352+EBP]
    56 0000005C 83 C4 20                        	ADD	ESP,32
    57 0000005F 50                              	PUSH	EAX
    58 00000060 8D 85 FFFFFE9C                  	LEA	EAX,DWORD [-356+EBP]
    59 00000066 50                              	PUSH	EAX
    60 00000067 8D 85 FFFFFE98                  	LEA	EAX,DWORD [-360+EBP]
    61 0000006D 50                              	PUSH	EAX
    62 0000006E 8D 85 FFFFFE94                  	LEA	EAX,DWORD [-364+EBP]
    63 00000074 50                              	PUSH	EAX
    64 00000075 6A 00                           	PUSH	0
    65 00000077 6A 00                           	PUSH	0
    66 00000079 E8 [00000000]                   	CALL	_asm_cpuid
    67 0000007E 8B 85 FFFFFE98                  	MOV	EAX,DWORD [-360+EBP]
    68 00000084 89 45 E4                        	MOV	DWORD [-28+EBP],EAX
    69 00000087 8B 85 FFFFFEA0                  	MOV	EAX,DWORD [-352+EBP]
    70 0000008D 89 45 E8                        	MOV	DWORD [-24+EBP],EAX
    71 00000090 8B 85 FFFFFE9C                  	MOV	EAX,DWORD [-356+EBP]
    72 00000096 89 45 EC                        	MOV	DWORD [-20+EBP],EAX
    73 00000099 8D 45 E4                        	LEA	EAX,DWORD [-28+EBP]
    74 0000009C 50                              	PUSH	EAX
    75 0000009D 6A 0C                           	PUSH	12
    76 0000009F 6A 00                           	PUSH	0
    77 000000A1 6A 1B                           	PUSH	27
    78 000000A3 6A 0E                           	PUSH	14
    79 000000A5 FF B5 FFFFFE80                  	PUSH	DWORD [-384+EBP]
    80 000000AB C6 45 F0 00                     	MOV	BYTE [-16+EBP],0
    81 000000AF E8 [00000000]                   	CALL	_api_putstrwin
    82 000000B4 8D 85 FFFFFEA0                  	LEA	EAX,DWORD [-352+EBP]
    83 000000BA 83 C4 30                        	ADD	ESP,48
    84 000000BD 50                              	PUSH	EAX
    85 000000BE 8D 85 FFFFFE9C                  	LEA	EAX,DWORD [-356+EBP]
    86 000000C4 50                              	PUSH	EAX
    87 000000C5 8D 85 FFFFFE98                  	LEA	EAX,DWORD [-360+EBP]
    88 000000CB 50                              	PUSH	EAX
    89 000000CC 8D 85 FFFFFE94                  	LEA	EAX,DWORD [-364+EBP]
    90 000000D2 50                              	PUSH	EAX
    91 000000D3 6A 00                           	PUSH	0
    92 000000D5 6A 01                           	PUSH	1
    93 000000D7 E8 [00000000]                   	CALL	_asm_cpuid
    94 000000DC 8B 85 FFFFFE94                  	MOV	EAX,DWORD [-364+EBP]
    95 000000E2 89 C3                           	MOV	EBX,EAX
    96 000000E4 89 85 FFFFFE74                  	MOV	DWORD [-396+EBP],EAX
    97 000000EA C1 EB 10                        	SHR	EBX,16
    98 000000ED 8B 8D FFFFFE74                  	MOV	ECX,DWORD [-396+EBP]
    99 000000F3 C1 E8 08                        	SHR	EAX,8
   100 000000F6 81 E3 00000FF0                  	AND	EBX,4080
   101 000000FC C1 E9 0C                        	SHR	ECX,12
   102 000000FF 83 E0 0F                        	AND	EAX,15
   103 00000102 01 C3                           	ADD	EBX,EAX
   104 00000104 81 E1 000000F0                  	AND	ECX,240
   105 0000010A 8B 85 FFFFFE74                  	MOV	EAX,DWORD [-396+EBP]
   106 00000110 83 A5 FFFFFE74 0F               	AND	DWORD [-396+EBP],15
   107 00000117 C1 E8 04                        	SHR	EAX,4
   108 0000011A 83 E0 0F                        	AND	EAX,15
   109 0000011D FF B5 FFFFFE74                  	PUSH	DWORD [-396+EBP]
   110 00000123 01 C1                           	ADD	ECX,EAX
   111 00000125 51                              	PUSH	ECX
   112 00000126 53                              	PUSH	EBX
   113 00000127 68 [00000012]                   	PUSH	LC1
   114 0000012C 56                              	PUSH	ESI
   115 0000012D E8 [00000000]                   	CALL	_sprintf
   116 00000132 31 C0                           	XOR	EAX,EAX
   117 00000134 83 C4 2C                        	ADD	ESP,44
   118 00000137 83 C9 FF                        	OR	ECX,-1
   119 0000013A FC                              	CLD
   120 0000013B 56                              	PUSH	ESI
   121 0000013C F2                              	REPNE
   122 0000013D AE                              	SCASB
   123 0000013E F7 D1                           	NOT	ECX
   124 00000140 49                              	DEC	ECX
   125 00000141 51                              	PUSH	ECX
   126 00000142 6A 00                           	PUSH	0
   127 00000144 6A 2B                           	PUSH	43
   128 00000146 6A 0E                           	PUSH	14
   129 00000148 FF B5 FFFFFE80                  	PUSH	DWORD [-384+EBP]
   130 0000014E E8 [00000000]                   	CALL	_api_putstrwin
   131 00000153 8D 85 FFFFFEA0                  	LEA	EAX,DWORD [-352+EBP]
   132 00000159 50                              	PUSH	EAX
   133 0000015A 8D 85 FFFFFE9C                  	LEA	EAX,DWORD [-356+EBP]
   134 00000160 50                              	PUSH	EAX
   135 00000161 8D 85 FFFFFE98                  	LEA	EAX,DWORD [-360+EBP]
   136 00000167 50                              	PUSH	EAX
   137 00000168 8D 85 FFFFFE94                  	LEA	EAX,DWORD [-364+EBP]
   138 0000016E 50                              	PUSH	EAX
   139 0000016F 6A 00                           	PUSH	0
   140 00000171 68 80000000                     	PUSH	-2147483648
   141 00000176 E8 [00000000]                   	CALL	_asm_cpuid
   142 0000017B 83 C4 30                        	ADD	ESP,48
   143 0000017E 8B 85 FFFFFE94                  	MOV	EAX,DWORD [-364+EBP]
   144 00000184 89 85 FFFFFE78                  	MOV	DWORD [-392+EBP],EAX
   145 0000018A 3D 80000000                     	CMP	EAX,-2147483648
   146 0000018F 0F 87 00000214                  	JA	L15
   147 00000195                                 L2:
   148 00000195 81 BD FFFFFE78 80000003         	CMP	DWORD [-392+EBP],-2147483645
   149 0000019F 0F 87 000000E7                  	JA	L16
   150 000001A5                                 L3:
   151 000001A5 8D 85 FFFFFE90                  	LEA	EAX,DWORD [-368+EBP]
   152 000001AB 50                              	PUSH	EAX
   153 000001AC 8D 85 FFFFFE8C                  	LEA	EAX,DWORD [-372+EBP]
   154 000001B2 50                              	PUSH	EAX
   155 000001B3 E8 [00000000]                   	CALL	_asm_rdtsc
   156 000001B8 58                              	POP	EAX
   157 000001B9 5A                              	POP	EDX
   158 000001BA                                 L10:
   159 000001BA 6A 64                           	PUSH	100
   160 000001BC FF B5 FFFFFE7C                  	PUSH	DWORD [-388+EBP]
   161 000001C2 E8 [00000000]                   	CALL	_api_settimer
   162 000001C7 6A 01                           	PUSH	1
   163 000001C9 E8 [00000000]                   	CALL	_api_getkey
   164 000001CE 83 C4 0C                        	ADD	ESP,12
   165 000001D1 83 C0 80                        	ADD	EAX,-128
   166 000001D4 0F 85 000000A5                  	JNE	L11
   167 000001DA 8D 85 FFFFFE88                  	LEA	EAX,DWORD [-376+EBP]
   168 000001E0 8D BD FFFFFEA4                  	LEA	EDI,DWORD [-348+EBP]
   169 000001E6 50                              	PUSH	EAX
   170 000001E7 8D 85 FFFFFE84                  	LEA	EAX,DWORD [-380+EBP]
   171 000001ED 50                              	PUSH	EAX
   172 000001EE E8 [00000000]                   	CALL	_asm_rdtsc
   173 000001F3 31 D2                           	XOR	EDX,EDX
   174 000001F5 8B 85 FFFFFE88                  	MOV	EAX,DWORD [-376+EBP]
   175 000001FB B9 000F4240                     	MOV	ECX,1000000
   176 00000200 89 85 FFFFFE6C                  	MOV	DWORD [-404+EBP],EAX
   177 00000206 8B 85 FFFFFE90                  	MOV	EAX,DWORD [-368+EBP]
   178 0000020C 29 85 FFFFFE6C                  	SUB	DWORD [-404+EBP],EAX
   179 00000212 8B 85 FFFFFE6C                  	MOV	EAX,DWORD [-404+EBP]
   180 00000218 F7 F1                           	DIV	ECX
   181 0000021A 50                              	PUSH	EAX
   182 0000021B 68 [0000003C]                   	PUSH	LC3
   183 00000220 57                              	PUSH	EDI
   184 00000221 E8 [00000000]                   	CALL	_sprintf
   185 00000226 6A 08                           	PUSH	8
   186 00000228 6A 69                           	PUSH	105
   187 0000022A 68 000000AE                     	PUSH	174
   188 0000022F 6A 5B                           	PUSH	91
   189 00000231 6A 0E                           	PUSH	14
   190 00000233 FF B5 FFFFFE80                  	PUSH	DWORD [-384+EBP]
   191 00000239 E8 [00000000]                   	CALL	_api_boxfilwin
   192 0000023E 31 C0                           	XOR	EAX,EAX
   193 00000240 83 C4 2C                        	ADD	ESP,44
   194 00000243 83 C9 FF                        	OR	ECX,-1
   195 00000246 FC                              	CLD
   196 00000247 57                              	PUSH	EDI
   197 00000248 F2                              	REPNE
   198 00000249 AE                              	SCASB
   199 0000024A F7 D1                           	NOT	ECX
   200 0000024C 49                              	DEC	ECX
   201 0000024D 51                              	PUSH	ECX
   202 0000024E 6A 00                           	PUSH	0
   203 00000250 6A 5B                           	PUSH	91
   204 00000252 6A 0E                           	PUSH	14
   205 00000254 FF B5 FFFFFE80                  	PUSH	DWORD [-384+EBP]
   206 0000025A E8 [00000000]                   	CALL	_api_putstrwin
   207 0000025F 83 C4 18                        	ADD	ESP,24
   208 00000262 8B 85 FFFFFE84                  	MOV	EAX,DWORD [-380+EBP]
   209 00000268 89 85 FFFFFE8C                  	MOV	DWORD [-372+EBP],EAX
   210 0000026E 8B 85 FFFFFE88                  	MOV	EAX,DWORD [-376+EBP]
   211 00000274 89 85 FFFFFE90                  	MOV	DWORD [-368+EBP],EAX
   212 0000027A E9 FFFFFF3B                     	JMP	L10
   213 0000027F                                 L11:
   214 0000027F E8 [00000000]                   	CALL	_api_end
   215 00000284 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   216 00000287 5B                              	POP	EBX
   217 00000288 5E                              	POP	ESI
   218 00000289 5F                              	POP	EDI
   219 0000028A 5D                              	POP	EBP
   220 0000028B C3                              	RET
   221 0000028C                                 L16:
   222 0000028C 8D 85 FFFFFEA0                  	LEA	EAX,DWORD [-352+EBP]
   223 00000292 50                              	PUSH	EAX
   224 00000293 8D 85 FFFFFE9C                  	LEA	EAX,DWORD [-356+EBP]
   225 00000299 50                              	PUSH	EAX
   226 0000029A 8D 85 FFFFFE98                  	LEA	EAX,DWORD [-360+EBP]
   227 000002A0 50                              	PUSH	EAX
   228 000002A1 8D 85 FFFFFE94                  	LEA	EAX,DWORD [-364+EBP]
   229 000002A7 50                              	PUSH	EAX
   230 000002A8 6A 00                           	PUSH	0
   231 000002AA 68 80000002                     	PUSH	-2147483646
   232 000002AF E8 [00000000]                   	CALL	_asm_cpuid
   233 000002B4 8B 85 FFFFFE94                  	MOV	EAX,DWORD [-364+EBP]
   234 000002BA 89 45 A4                        	MOV	DWORD [-92+EBP],EAX
   235 000002BD 8B 85 FFFFFE98                  	MOV	EAX,DWORD [-360+EBP]
   236 000002C3 89 45 A8                        	MOV	DWORD [-88+EBP],EAX
   237 000002C6 8B 85 FFFFFE9C                  	MOV	EAX,DWORD [-356+EBP]
   238 000002CC 89 45 AC                        	MOV	DWORD [-84+EBP],EAX
   239 000002CF 8B 85 FFFFFEA0                  	MOV	EAX,DWORD [-352+EBP]
   240 000002D5 89 45 B0                        	MOV	DWORD [-80+EBP],EAX
   241 000002D8 8D 85 FFFFFEA0                  	LEA	EAX,DWORD [-352+EBP]
   242 000002DE 50                              	PUSH	EAX
   243 000002DF 8D 85 FFFFFE9C                  	LEA	EAX,DWORD [-356+EBP]
   244 000002E5 50                              	PUSH	EAX
   245 000002E6 8D 85 FFFFFE98                  	LEA	EAX,DWORD [-360+EBP]
   246 000002EC 50                              	PUSH	EAX
   247 000002ED 8D 85 FFFFFE94                  	LEA	EAX,DWORD [-364+EBP]
   248 000002F3 50                              	PUSH	EAX
   249 000002F4 6A 00                           	PUSH	0
   250 000002F6 68 80000003                     	PUSH	-2147483645
   251 000002FB E8 [00000000]                   	CALL	_asm_cpuid
   252 00000300 83 C4 30                        	ADD	ESP,48
   253 00000303 8B 85 FFFFFE94                  	MOV	EAX,DWORD [-364+EBP]
   254 00000309 89 45 B4                        	MOV	DWORD [-76+EBP],EAX
   255 0000030C 8B 85 FFFFFE98                  	MOV	EAX,DWORD [-360+EBP]
   256 00000312 89 45 B8                        	MOV	DWORD [-72+EBP],EAX
   257 00000315 8B 85 FFFFFE9C                  	MOV	EAX,DWORD [-356+EBP]
   258 0000031B 89 45 BC                        	MOV	DWORD [-68+EBP],EAX
   259 0000031E 8B 85 FFFFFEA0                  	MOV	EAX,DWORD [-352+EBP]
   260 00000324 89 45 C0                        	MOV	DWORD [-64+EBP],EAX
   261 00000327 8D 85 FFFFFEA0                  	LEA	EAX,DWORD [-352+EBP]
   262 0000032D 50                              	PUSH	EAX
   263 0000032E 8D 85 FFFFFE9C                  	LEA	EAX,DWORD [-356+EBP]
   264 00000334 50                              	PUSH	EAX
   265 00000335 8D 85 FFFFFE98                  	LEA	EAX,DWORD [-360+EBP]
   266 0000033B 50                              	PUSH	EAX
   267 0000033C 8D 85 FFFFFE94                  	LEA	EAX,DWORD [-364+EBP]
   268 00000342 50                              	PUSH	EAX
   269 00000343 6A 00                           	PUSH	0
   270 00000345 68 80000004                     	PUSH	-2147483644
   271 0000034A E8 [00000000]                   	CALL	_asm_cpuid
   272 0000034F 83 C4 18                        	ADD	ESP,24
   273 00000352 8B 85 FFFFFE94                  	MOV	EAX,DWORD [-364+EBP]
   274 00000358 89 45 C4                        	MOV	DWORD [-60+EBP],EAX
   275 0000035B 8B 85 FFFFFE98                  	MOV	EAX,DWORD [-360+EBP]
   276 00000361 89 45 C8                        	MOV	DWORD [-56+EBP],EAX
   277 00000364 8B 85 FFFFFE9C                  	MOV	EAX,DWORD [-356+EBP]
   278 0000036A 89 45 CC                        	MOV	DWORD [-52+EBP],EAX
   279 0000036D 8B 85 FFFFFEA0                  	MOV	EAX,DWORD [-352+EBP]
   280 00000373 89 45 D0                        	MOV	DWORD [-48+EBP],EAX
   281 00000376 31 C0                           	XOR	EAX,EAX
   282 00000378 C6 45 D5 00                     	MOV	BYTE [-43+EBP],0
   283 0000037C                                 L9:
   284 0000037C 80 7C 05 A4 20                  	CMP	BYTE [-92+EBP+EAX*1],32
   285 00000381 7F 06                           	JG	L5
   286 00000383 40                              	INC	EAX
   287 00000384 83 F8 30                        	CMP	EAX,48
   288 00000387 7E F3                           	JLE	L9
   289 00000389                                 L5:
   290 00000389 8D 44 28 A4                     	LEA	EAX,DWORD [-92+EAX+EBP*1]
   291 0000038D 50                              	PUSH	EAX
   292 0000038E 6A 30                           	PUSH	48
   293 00000390 6A 00                           	PUSH	0
   294 00000392 6A 4B                           	PUSH	75
   295 00000394 6A 0E                           	PUSH	14
   296 00000396 FF B5 FFFFFE80                  	PUSH	DWORD [-384+EBP]
   297 0000039C E8 [00000000]                   	CALL	_api_putstrwin
   298 000003A1 83 C4 18                        	ADD	ESP,24
   299 000003A4 E9 FFFFFDFC                     	JMP	L3
   300 000003A9                                 L15:
   301 000003A9 8D 85 FFFFFEA0                  	LEA	EAX,DWORD [-352+EBP]
   302 000003AF 89 F7                           	MOV	EDI,ESI
   303 000003B1 50                              	PUSH	EAX
   304 000003B2 8D 85 FFFFFE9C                  	LEA	EAX,DWORD [-356+EBP]
   305 000003B8 50                              	PUSH	EAX
   306 000003B9 8D 85 FFFFFE98                  	LEA	EAX,DWORD [-360+EBP]
   307 000003BF 50                              	PUSH	EAX
   308 000003C0 8D 85 FFFFFE94                  	LEA	EAX,DWORD [-364+EBP]
   309 000003C6 50                              	PUSH	EAX
   310 000003C7 6A 00                           	PUSH	0
   311 000003C9 68 80000001                     	PUSH	-2147483647
   312 000003CE E8 [00000000]                   	CALL	_asm_cpuid
   313 000003D3 8B 85 FFFFFE94                  	MOV	EAX,DWORD [-364+EBP]
   314 000003D9 89 C3                           	MOV	EBX,EAX
   315 000003DB 89 85 FFFFFE70                  	MOV	DWORD [-400+EBP],EAX
   316 000003E1 C1 EB 10                        	SHR	EBX,16
   317 000003E4 8B 8D FFFFFE70                  	MOV	ECX,DWORD [-400+EBP]
   318 000003EA C1 E8 08                        	SHR	EAX,8
   319 000003ED 81 E3 00000FF0                  	AND	EBX,4080
   320 000003F3 C1 E9 0C                        	SHR	ECX,12
   321 000003F6 83 E0 0F                        	AND	EAX,15
   322 000003F9 01 C3                           	ADD	EBX,EAX
   323 000003FB 81 E1 000000F0                  	AND	ECX,240
   324 00000401 8B 85 FFFFFE70                  	MOV	EAX,DWORD [-400+EBP]
   325 00000407 83 A5 FFFFFE70 0F               	AND	DWORD [-400+EBP],15
   326 0000040E C1 E8 04                        	SHR	EAX,4
   327 00000411 83 E0 0F                        	AND	EAX,15
   328 00000414 FF B5 FFFFFE70                  	PUSH	DWORD [-400+EBP]
   329 0000041A 01 C1                           	ADD	ECX,EAX
   330 0000041C 51                              	PUSH	ECX
   331 0000041D 53                              	PUSH	EBX
   332 0000041E 68 [0000004A]                   	PUSH	LC2
   333 00000423 56                              	PUSH	ESI
   334 00000424 E8 [00000000]                   	CALL	_sprintf
   335 00000429 31 C0                           	XOR	EAX,EAX
   336 0000042B 83 C4 2C                        	ADD	ESP,44
   337 0000042E 83 C9 FF                        	OR	ECX,-1
   338 00000431 FC                              	CLD
   339 00000432 56                              	PUSH	ESI
   340 00000433 F2                              	REPNE
   341 00000434 AE                              	SCASB
   342 00000435 F7 D1                           	NOT	ECX
   343 00000437 49                              	DEC	ECX
   344 00000438 51                              	PUSH	ECX
   345 00000439 6A 00                           	PUSH	0
   346 0000043B 6A 3B                           	PUSH	59
   347 0000043D 6A 0E                           	PUSH	14
   348 0000043F FF B5 FFFFFE80                  	PUSH	DWORD [-384+EBP]
   349 00000445 E8 [00000000]                   	CALL	_api_putstrwin
   350 0000044A 83 C4 18                        	ADD	ESP,24
   351 0000044D E9 FFFFFD43                     	JMP	L2
