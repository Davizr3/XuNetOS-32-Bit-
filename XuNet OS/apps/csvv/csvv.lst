     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	__alloca
     7 00000000                                 	EXTERN	_maxell_x
     8 00000000                                 	EXTERN	_maxell_y
     9 00000000                                 	EXTERN	_api_cmdline
    10 00000000                                 	EXTERN	_api_fopen
    11 00000000                                 	EXTERN	_api_putstr0
    12 00000000                                 	EXTERN	_api_end
    13 00000000                                 	EXTERN	_api_fsize
    14 00000000                                 	EXTERN	_api_fread
    15 00000000                                 	EXTERN	_api_fclose
    16 00000000                                 	EXTERN	_api_openwin
    17 00000000                                 	EXTERN	_api_boxfilwin
    18 00000000                                 	EXTERN	_api_linewin
    19 00000000                                 	EXTERN	_api_getkey
    20 00000000                                 	EXTERN	_api_putstrwin
    21 00000000                                 [FILE "csvv.c"]
    22                                          [SECTION .data]
    23 00000000                                 	ALIGNB	4
    24 00000000                                 _maxell_x:
    25 00000000 00000007                        	DD	7
    26 00000004                                 	ALIGNB	4
    27 00000004                                 _maxell_y:
    28 00000004 00000010                        	DD	16
    29 00000008                                 LC0:
    30 00000008 46 69 6C 65 20 6E 6F 74 20 66   	DB	"File not found.",0x0A,0x00
       00000012 6F 75 6E 64 2E 0A 00 
    31 00000019                                 LC1:
    32 00000019 46 69 6C 65 73 69 7A 65 20 69   	DB	"Filesize is too big.",0x0A,0x00
       00000023 73 20 74 6F 6F 20 62 69 67 2E 
       0000002D 0A 00 
    33 0000002F                                 LC2:
    34 0000002F 43 53 56 2D 56 69 65 77 65 72   	DB	"CSV-Viewer",0x00
       00000039 00 
    35                                          [SECTION .text]
    36 00000000                                 	GLOBAL	__main
    37 00000000                                 __main:
    38 00000000 55                              	PUSH	EBP
    39 00000001 B8 00059780                     	MOV	EAX,366464
    40 00000006 89 E5                           	MOV	EBP,ESP
    41 00000008 57                              	PUSH	EDI
    42 00000009 56                              	PUSH	ESI
    43 0000000A 53                              	PUSH	EBX
    44 0000000B E8 [00000000]                   	CALL	__alloca
    45 00000010 6B 15 [00000000] 52             	IMUL	EDX,DWORD [_maxell_x],82
    46 00000017 6B 05 [00000004] 12             	IMUL	EAX,DWORD [_maxell_y],18
    47 0000001E 83 C2 0C                        	ADD	EDX,12
    48 00000021 83 C0 34                        	ADD	EAX,52
    49 00000024 0F AF D0                        	IMUL	EDX,EAX
    50 00000027 8D 42 10                        	LEA	EAX,DWORD [16+EDX]
    51 0000002A 8D 95 FFFCDFC4                  	LEA	EDX,DWORD [-204860+EBP]
    52 00000030 E8 [00000000]                   	CALL	__alloca
    53 00000035 8D 44 24 0F                     	LEA	EAX,DWORD [15+ESP]
    54 00000039 83 E0 F0                        	AND	EAX,-16
    55 0000003C 89 85 FFFA6880                  	MOV	DWORD [-366464+EBP],EAX
    56 00000042 8D 85 FFFA6884                  	LEA	EAX,DWORD [-366460+EBP]
    57 00000048 39 D0                           	CMP	EAX,EDX
    58 0000004A 77 0D                           	JA	L76
    59 0000004C                                 L6:
    60 0000004C C7 00 FFFFFFFF                  	MOV	DWORD [EAX],-1
    61 00000052 83 C0 04                        	ADD	EAX,4
    62 00000055 39 D0                           	CMP	EAX,EDX
    63 00000057 76 F3                           	JBE	L6
    64 00000059                                 L76:
    65 00000059 6A 1E                           	PUSH	30
    66 0000005B 8D 5D D4                        	LEA	EBX,DWORD [-44+EBP]
    67 0000005E 53                              	PUSH	EBX
    68 0000005F C7 85 FFFCDFD0 00000000         	MOV	DWORD [-204848+EBP],0
    69 00000069 C7 85 FFFCDFCC 00000000         	MOV	DWORD [-204852+EBP],0
    70 00000073 C7 85 FFFCDFC8 00000000         	MOV	DWORD [-204856+EBP],0
    71 0000007D E8 [00000000]                   	CALL	_api_cmdline
    72 00000082 5A                              	POP	EDX
    73 00000083 89 D8                           	MOV	EAX,EBX
    74 00000085 59                              	POP	ECX
    75 00000086 80 7D D4 20                     	CMP	BYTE [-44+EBP],32
    76 0000008A 7E 06                           	JLE	L78
    77 0000008C                                 L11:
    78 0000008C 40                              	INC	EAX
    79 0000008D 80 38 20                        	CMP	BYTE [EAX],32
    80 00000090 7F FA                           	JG	L11
    81 00000092                                 L78:
    82 00000092 80 38 20                        	CMP	BYTE [EAX],32
    83 00000095 0F 84 00000522                  	JE	L16
    84 0000009B                                 L80:
    85 0000009B 50                              	PUSH	EAX
    86 0000009C E8 [00000000]                   	CALL	_api_fopen
    87 000000A1 89 C3                           	MOV	EBX,EAX
    88 000000A3 58                              	POP	EAX
    89 000000A4 85 DB                           	TEST	EBX,EBX
    90 000000A6 75 10                           	JNE	L17
    91 000000A8 68 [00000008]                   	PUSH	LC0
    92 000000AD E8 [00000000]                   	CALL	_api_putstr0
    93 000000B2 E8 [00000000]                   	CALL	_api_end
    94 000000B7 5F                              	POP	EDI
    95 000000B8                                 L17:
    96 000000B8 6A 00                           	PUSH	0
    97 000000BA 53                              	PUSH	EBX
    98 000000BB E8 [00000000]                   	CALL	_api_fsize
    99 000000C0 59                              	POP	ECX
   100 000000C1 5E                              	POP	ESI
   101 000000C2 3D 00031FFE                     	CMP	EAX,204798
   102 000000C7 89 85 FFFCDFD0                  	MOV	DWORD [-204848+EBP],EAX
   103 000000CD 7E 10                           	JLE	L18
   104 000000CF 68 [00000019]                   	PUSH	LC1
   105 000000D4 E8 [00000000]                   	CALL	_api_putstr0
   106 000000D9 E8 [00000000]                   	CALL	_api_end
   107 000000DE 5A                              	POP	EDX
   108 000000DF                                 L18:
   109 000000DF 53                              	PUSH	EBX
   110 000000E0 8D 85 FFFCDFD4                  	LEA	EAX,DWORD [-204844+EBP]
   111 000000E6 FF B5 FFFCDFD0                  	PUSH	DWORD [-204848+EBP]
   112 000000EC 50                              	PUSH	EAX
   113 000000ED E8 [00000000]                   	CALL	_api_fread
   114 000000F2 53                              	PUSH	EBX
   115 000000F3 31 DB                           	XOR	EBX,EBX
   116 000000F5 E8 [00000000]                   	CALL	_api_fclose
   117 000000FA 31 C9                           	XOR	ECX,ECX
   118 000000FC 83 C4 10                        	ADD	ESP,16
   119 000000FF C7 85 FFFA687C 00000000         	MOV	DWORD [-366468+EBP],0
   120 00000109 80 BD FFFCDFD4 2C               	CMP	BYTE [-204844+EBP],44
   121 00000110 74 0A                           	JE	L19
   122 00000112 C7 85 FFFA6884 00000000         	MOV	DWORD [-366460+EBP],0
   123 0000011C                                 L19:
   124 0000011C 8B 95 FFFA687C                  	MOV	EDX,DWORD [-366468+EBP]
   125 00000122 3B 95 FFFCDFD0                  	CMP	EDX,DWORD [-204848+EBP]
   126 00000128 7D 40                           	JGE	L21
   127 0000012A 8D BD FFFA6884                  	LEA	EDI,DWORD [-366460+EBP]
   128 00000130 31 F6                           	XOR	ESI,ESI
   129 00000132                                 L38:
   130 00000132 8A 94 1D FFFCDFD4               	MOV	DL,BYTE [-204844+EBP+EBX*1]
   131 00000139 43                              	INC	EBX
   132 0000013A 80 FA 22                        	CMP	DL,34
   133 0000013D 0F 84 00000454                  	JE	L92
   134 00000143                                 L23:
   135 00000143 85 C9                           	TEST	ECX,ECX
   136 00000145 75 09                           	JNE	L28
   137 00000147 80 FA 2C                        	CMP	DL,44
   138 0000014A 0F 84 0000040E                  	JE	L93
   139 00000150                                 L28:
   140 00000150 80 FA 0D                        	CMP	DL,13
   141 00000153 0F 84 000003F5                  	JE	L94
   142 00000159                                 L32:
   143 00000159 80 FA 0A                        	CMP	DL,10
   144 0000015C 0F 84 00000374                  	JE	L95
   145 00000162                                 L20:
   146 00000162 3B 9D FFFCDFD0                  	CMP	EBX,DWORD [-204848+EBP]
   147 00000168 7C C8                           	JL	L38
   148 0000016A                                 L21:
   149 0000016A 6B 05 [00000004] 12             	IMUL	EAX,DWORD [_maxell_y],18
   150 00000171 68 [0000002F]                   	PUSH	LC2
   151 00000176 83 C0 34                        	ADD	EAX,52
   152 00000179 6A FF                           	PUSH	-1
   153 0000017B FF 85 FFFCDFC8                  	INC	DWORD [-204856+EBP]
   154 00000181 50                              	PUSH	EAX
   155 00000182 FF 85 FFFCDFCC                  	INC	DWORD [-204852+EBP]
   156 00000188 6B 05 [00000000] 52             	IMUL	EAX,DWORD [_maxell_x],82
   157 0000018F 83 C0 0C                        	ADD	EAX,12
   158 00000192 31 DB                           	XOR	EBX,EBX
   159 00000194 50                              	PUSH	EAX
   160 00000195 FF B5 FFFA6880                  	PUSH	DWORD [-366464+EBP]
   161 0000019B E8 [00000000]                   	CALL	_api_openwin
   162 000001A0 6A 07                           	PUSH	7
   163 000001A2 6B 15 [00000004] 12             	IMUL	EDX,DWORD [_maxell_y],18
   164 000001A9 83 C2 2A                        	ADD	EDX,42
   165 000001AC A3 [0000003C]                   	MOV	DWORD [_win],EAX
   166 000001B1 52                              	PUSH	EDX
   167 000001B2 6B 15 [00000000] 52             	IMUL	EDX,DWORD [_maxell_x],82
   168 000001B9 83 C2 06                        	ADD	EDX,6
   169 000001BC 52                              	PUSH	EDX
   170 000001BD 6A 2A                           	PUSH	42
   171 000001BF 6A 06                           	PUSH	6
   172 000001C1 50                              	PUSH	EAX
   173 000001C2 E8 [00000000]                   	CALL	_api_boxfilwin
   174 000001C7 83 C4 2C                        	ADD	ESP,44
   175 000001CA 6B 05 [00000000] 52             	IMUL	EAX,DWORD [_maxell_x],82
   176 000001D1 39 C3                           	CMP	EBX,EAX
   177 000001D3 7F 30                           	JG	L83
   178 000001D5                                 L43:
   179 000001D5 6B 05 [00000004] 12             	IMUL	EAX,DWORD [_maxell_y],18
   180 000001DC 6A 0F                           	PUSH	15
   181 000001DE 83 C0 2A                        	ADD	EAX,42
   182 000001E1 50                              	PUSH	EAX
   183 000001E2 8D 43 06                        	LEA	EAX,DWORD [6+EBX]
   184 000001E5 50                              	PUSH	EAX
   185 000001E6 83 C3 52                        	ADD	EBX,82
   186 000001E9 6A 2A                           	PUSH	42
   187 000001EB 50                              	PUSH	EAX
   188 000001EC FF 35 [0000003C]                	PUSH	DWORD [_win]
   189 000001F2 E8 [00000000]                   	CALL	_api_linewin
   190 000001F7 83 C4 18                        	ADD	ESP,24
   191 000001FA 6B 05 [00000000] 52             	IMUL	EAX,DWORD [_maxell_x],82
   192 00000201 39 C3                           	CMP	EBX,EAX
   193 00000203 7E D0                           	JLE	L43
   194 00000205                                 L83:
   195 00000205 6B 05 [00000004] 12             	IMUL	EAX,DWORD [_maxell_y],18
   196 0000020C 31 DB                           	XOR	EBX,EBX
   197 0000020E 39 C3                           	CMP	EBX,EAX
   198 00000210 7F 30                           	JG	L85
   199 00000212                                 L48:
   200 00000212 6B 15 [00000000] 52             	IMUL	EDX,DWORD [_maxell_x],82
   201 00000219 6A 0F                           	PUSH	15
   202 0000021B 8D 43 2A                        	LEA	EAX,DWORD [42+EBX]
   203 0000021E 50                              	PUSH	EAX
   204 0000021F 83 C2 06                        	ADD	EDX,6
   205 00000222 52                              	PUSH	EDX
   206 00000223 83 C3 12                        	ADD	EBX,18
   207 00000226 50                              	PUSH	EAX
   208 00000227 6A 06                           	PUSH	6
   209 00000229 FF 35 [0000003C]                	PUSH	DWORD [_win]
   210 0000022F E8 [00000000]                   	CALL	_api_linewin
   211 00000234 83 C4 18                        	ADD	ESP,24
   212 00000237 6B 05 [00000004] 12             	IMUL	EAX,DWORD [_maxell_y],18
   213 0000023E 39 C3                           	CMP	EBX,EAX
   214 00000240 7E D0                           	JLE	L48
   215 00000242                                 L85:
   216 00000242 8D 9D FFFA6884                  	LEA	EBX,DWORD [-366460+EBP]
   217 00000248 BE 00000001                     	MOV	ESI,1
   218 0000024D 53                              	PUSH	EBX
   219 0000024E BF 00000001                     	MOV	EDI,1
   220 00000253 6A 01                           	PUSH	1
   221 00000255 6A 01                           	PUSH	1
   222 00000257 C7 85 FFFA6878 00000001         	MOV	DWORD [-366472+EBP],1
   223 00000261 C7 85 FFFA687C 00000001         	MOV	DWORD [-366468+EBP],1
   224 0000026B E8 00000424                     	CALL	_PutCell
   225 00000270 6A 01                           	PUSH	1
   226 00000272 6A 01                           	PUSH	1
   227 00000274 6A 04                           	PUSH	4
   228 00000276 E8 00000710                     	CALL	_my_drawboxId
   229 0000027B 53                              	PUSH	EBX
   230 0000027C 6A 00                           	PUSH	0
   231 0000027E 6A 00                           	PUSH	0
   232 00000280 E8 000005C1                     	CALL	_Putcellinfo
   233 00000285 83 C4 24                        	ADD	ESP,36
   234 00000288                                 L49:
   235 00000288 6A 01                           	PUSH	1
   236 0000028A E8 [00000000]                   	CALL	_api_getkey
   237 0000028F 89 C2                           	MOV	EDX,EAX
   238 00000291 58                              	POP	EAX
   239 00000292 83 FA 4B                        	CMP	EDX,75
   240 00000295 0F 84 000001EC                  	JE	L96
   241 0000029B                                 L52:
   242 0000029B 83 FA 4D                        	CMP	EDX,77
   243 0000029E 0F 84 00000185                  	JE	L97
   244 000002A4                                 L56:
   245 000002A4 83 FA 48                        	CMP	EDX,72
   246 000002A7 0F 84 0000013F                  	JE	L98
   247 000002AD                                 L60:
   248 000002AD 83 FA 50                        	CMP	EDX,80
   249 000002B0 0F 84 000000EF                  	JE	L99
   250 000002B6                                 L64:
   251 000002B6 83 FA 49                        	CMP	EDX,73
   252 000002B9 0F 84 00000094                  	JE	L100
   253 000002BF                                 L68:
   254 000002BF 83 FA 51                        	CMP	EDX,81
   255 000002C2 74 39                           	JE	L101
   256 000002C4                                 L71:
   257 000002C4 85 D2                           	TEST	EDX,EDX
   258 000002C6 75 C0                           	JNE	L49
   259 000002C8 57                              	PUSH	EDI
   260 000002C9 FF B5 FFFA687C                  	PUSH	DWORD [-366468+EBP]
   261 000002CF 6A 04                           	PUSH	4
   262 000002D1 E8 000006B5                     	CALL	_my_drawboxId
   263 000002D6 8B 95 FFFA687C                  	MOV	EDX,DWORD [-366468+EBP]
   264 000002DC 8D 85 FFFA6884                  	LEA	EAX,DWORD [-366460+EBP]
   265 000002E2 8B 8D FFFA6878                  	MOV	ECX,DWORD [-366472+EBP]
   266 000002E8 50                              	PUSH	EAX
   267 000002E9 8D 44 37 FE                     	LEA	EAX,DWORD [-2+EDI+ESI*1]
   268 000002ED 50                              	PUSH	EAX
   269 000002EE 8D 44 0A FE                     	LEA	EAX,DWORD [-2+EDX+ECX*1]
   270 000002F2 50                              	PUSH	EAX
   271 000002F3 E8 0000054E                     	CALL	_Putcellinfo
   272 000002F8 83 C4 18                        	ADD	ESP,24
   273 000002FB EB 8B                           	JMP	L49
   274 000002FD                                 L101:
   275 000002FD 8B 0D [00000004]                	MOV	ECX,DWORD [_maxell_y]
   276 00000303 B8 000000C9                     	MOV	EAX,201
   277 00000308 29 C8                           	SUB	EAX,ECX
   278 0000030A 39 C6                           	CMP	ESI,EAX
   279 0000030C 7F B6                           	JG	L71
   280 0000030E 8D 74 31 FF                     	LEA	ESI,DWORD [-1+ECX+ESI*1]
   281 00000312 39 C6                           	CMP	ESI,EAX
   282 00000314 7E 20                           	JLE	L73
   283 00000316 57                              	PUSH	EDI
   284 00000317 BE 000000CA                     	MOV	ESI,202
   285 0000031C FF B5 FFFA687C                  	PUSH	DWORD [-366468+EBP]
   286 00000322 6A 0F                           	PUSH	15
   287 00000324 E8 00000662                     	CALL	_my_drawboxId
   288 00000329 83 C4 0C                        	ADD	ESP,12
   289 0000032C A1 [00000004]                   	MOV	EAX,DWORD [_maxell_y]
   290 00000331 29 C6                           	SUB	ESI,EAX
   291 00000333 8D 78 FF                        	LEA	EDI,DWORD [-1+EAX]
   292 00000336                                 L73:
   293 00000336 8D 85 FFFA6884                  	LEA	EAX,DWORD [-366460+EBP]
   294 0000033C 50                              	PUSH	EAX
   295 0000033D 56                              	PUSH	ESI
   296 0000033E FF B5 FFFA6878                  	PUSH	DWORD [-366472+EBP]
   297 00000344 E8 0000034B                     	CALL	_PutCell
   298 00000349 83 C4 0C                        	ADD	ESP,12
   299 0000034C 31 D2                           	XOR	EDX,EDX
   300 0000034E E9 FFFFFF71                     	JMP	L71
   301 00000353                                 L100:
   302 00000353 83 FE 01                        	CMP	ESI,1
   303 00000356 0F 8E FFFFFF63                  	JLE	L68
   304 0000035C 89 F0                           	MOV	EAX,ESI
   305 0000035E 2B 05 [00000004]                	SUB	EAX,DWORD [_maxell_y]
   306 00000364 8D 70 01                        	LEA	ESI,DWORD [1+EAX]
   307 00000367 85 F6                           	TEST	ESI,ESI
   308 00000369 7E 1D                           	JLE	L102
   309 0000036B                                 L70:
   310 0000036B 8D 85 FFFA6884                  	LEA	EAX,DWORD [-366460+EBP]
   311 00000371 50                              	PUSH	EAX
   312 00000372 56                              	PUSH	ESI
   313 00000373 FF B5 FFFA6878                  	PUSH	DWORD [-366472+EBP]
   314 00000379 E8 00000316                     	CALL	_PutCell
   315 0000037E 83 C4 0C                        	ADD	ESP,12
   316 00000381 31 D2                           	XOR	EDX,EDX
   317 00000383 E9 FFFFFF37                     	JMP	L68
   318 00000388                                 L102:
   319 00000388 57                              	PUSH	EDI
   320 00000389 BE 00000001                     	MOV	ESI,1
   321 0000038E FF B5 FFFA687C                  	PUSH	DWORD [-366468+EBP]
   322 00000394 6A 0F                           	PUSH	15
   323 00000396 BF 00000001                     	MOV	EDI,1
   324 0000039B E8 000005EB                     	CALL	_my_drawboxId
   325 000003A0 83 C4 0C                        	ADD	ESP,12
   326 000003A3 EB C6                           	JMP	L70
   327 000003A5                                 L99:
   328 000003A5 A1 [00000004]                   	MOV	EAX,DWORD [_maxell_y]
   329 000003AA 48                              	DEC	EAX
   330 000003AB 39 C7                           	CMP	EDI,EAX
   331 000003AD 7D 19                           	JGE	L65
   332 000003AF 57                              	PUSH	EDI
   333 000003B0 47                              	INC	EDI
   334 000003B1 FF B5 FFFA687C                  	PUSH	DWORD [-366468+EBP]
   335 000003B7 6A 0F                           	PUSH	15
   336 000003B9 E8 000005CD                     	CALL	_my_drawboxId
   337 000003BE                                 L91:
   338 000003BE 31 D2                           	XOR	EDX,EDX
   339 000003C0 83 C4 0C                        	ADD	ESP,12
   340 000003C3 E9 FFFFFEEE                     	JMP	L64
   341 000003C8                                 L65:
   342 000003C8 8D 04 37                        	LEA	EAX,DWORD [EDI+ESI*1]
   343 000003CB 3D 000000C8                     	CMP	EAX,200
   344 000003D0 0F 8F FFFFFEE0                  	JG	L64
   345 000003D6 8D 85 FFFA6884                  	LEA	EAX,DWORD [-366460+EBP]
   346 000003DC 46                              	INC	ESI
   347 000003DD 50                              	PUSH	EAX
   348 000003DE 56                              	PUSH	ESI
   349 000003DF FF B5 FFFA6878                  	PUSH	DWORD [-366472+EBP]
   350 000003E5 E8 000002AA                     	CALL	_PutCell
   351 000003EA EB D2                           	JMP	L91
   352 000003EC                                 L98:
   353 000003EC 83 FF 01                        	CMP	EDI,1
   354 000003EF 7E 19                           	JLE	L61
   355 000003F1 57                              	PUSH	EDI
   356 000003F2 4F                              	DEC	EDI
   357 000003F3 FF B5 FFFA687C                  	PUSH	DWORD [-366468+EBP]
   358 000003F9 6A 0F                           	PUSH	15
   359 000003FB E8 0000058B                     	CALL	_my_drawboxId
   360 00000400                                 L90:
   361 00000400 31 D2                           	XOR	EDX,EDX
   362 00000402 83 C4 0C                        	ADD	ESP,12
   363 00000405 E9 FFFFFEA3                     	JMP	L60
   364 0000040A                                 L61:
   365 0000040A 83 FE 01                        	CMP	ESI,1
   366 0000040D 0F 8E FFFFFE9A                  	JLE	L60
   367 00000413 8D 85 FFFA6884                  	LEA	EAX,DWORD [-366460+EBP]
   368 00000419 4E                              	DEC	ESI
   369 0000041A 50                              	PUSH	EAX
   370 0000041B 56                              	PUSH	ESI
   371 0000041C FF B5 FFFA6878                  	PUSH	DWORD [-366472+EBP]
   372 00000422 E8 0000026D                     	CALL	_PutCell
   373 00000427 EB D7                           	JMP	L90
   374 00000429                                 L97:
   375 00000429 A1 [00000000]                   	MOV	EAX,DWORD [_maxell_x]
   376 0000042E 48                              	DEC	EAX
   377 0000042F 39 85 FFFA687C                  	CMP	DWORD [-366468+EBP],EAX
   378 00000435 7D 1E                           	JGE	L57
   379 00000437 57                              	PUSH	EDI
   380 00000438 FF B5 FFFA687C                  	PUSH	DWORD [-366468+EBP]
   381 0000043E 6A 0F                           	PUSH	15
   382 00000440 E8 00000546                     	CALL	_my_drawboxId
   383 00000445 FF 85 FFFA687C                  	INC	DWORD [-366468+EBP]
   384 0000044B                                 L89:
   385 0000044B 31 D2                           	XOR	EDX,EDX
   386 0000044D 83 C4 0C                        	ADD	ESP,12
   387 00000450 E9 FFFFFE4F                     	JMP	L56
   388 00000455                                 L57:
   389 00000455 8B 85 FFFA6878                  	MOV	EAX,DWORD [-366472+EBP]
   390 0000045B 03 85 FFFA687C                  	ADD	EAX,DWORD [-366468+EBP]
   391 00000461 3D 000000C8                     	CMP	EAX,200
   392 00000466 0F 8F FFFFFE38                  	JG	L56
   393 0000046C 8D 85 FFFA6884                  	LEA	EAX,DWORD [-366460+EBP]
   394 00000472 FF 85 FFFA6878                  	INC	DWORD [-366472+EBP]
   395 00000478 50                              	PUSH	EAX
   396 00000479 56                              	PUSH	ESI
   397 0000047A FF B5 FFFA6878                  	PUSH	DWORD [-366472+EBP]
   398 00000480 E8 0000020F                     	CALL	_PutCell
   399 00000485 EB C4                           	JMP	L89
   400 00000487                                 L96:
   401 00000487 83 BD FFFA687C 01               	CMP	DWORD [-366468+EBP],1
   402 0000048E 7E 1E                           	JLE	L53
   403 00000490 57                              	PUSH	EDI
   404 00000491 FF B5 FFFA687C                  	PUSH	DWORD [-366468+EBP]
   405 00000497 6A 0F                           	PUSH	15
   406 00000499 E8 000004ED                     	CALL	_my_drawboxId
   407 0000049E FF 8D FFFA687C                  	DEC	DWORD [-366468+EBP]
   408 000004A4                                 L88:
   409 000004A4 31 D2                           	XOR	EDX,EDX
   410 000004A6 83 C4 0C                        	ADD	ESP,12
   411 000004A9 E9 FFFFFDED                     	JMP	L52
   412 000004AE                                 L53:
   413 000004AE 83 BD FFFA6878 01               	CMP	DWORD [-366472+EBP],1
   414 000004B5 0F 8E FFFFFDE0                  	JLE	L52
   415 000004BB 8D 85 FFFA6884                  	LEA	EAX,DWORD [-366460+EBP]
   416 000004C1 FF 8D FFFA6878                  	DEC	DWORD [-366472+EBP]
   417 000004C7 50                              	PUSH	EAX
   418 000004C8 56                              	PUSH	ESI
   419 000004C9 FF B5 FFFA6878                  	PUSH	DWORD [-366472+EBP]
   420 000004CF E8 000001C0                     	CALL	_PutCell
   421 000004D4 EB CE                           	JMP	L88
   422 000004D6                                 L95:
   423 000004D6 80 BC 1D FFFCDFD4 0D            	CMP	BYTE [-204844+EBP+EBX*1],13
   424 000004DE 0F 85 FFFFFC7E                  	JNE	L20
   425 000004E4                                 L31:
   426 000004E4 8B 85 FFFCDFD0                  	MOV	EAX,DWORD [-204848+EBP]
   427 000004EA 39 C3                           	CMP	EBX,EAX
   428 000004EC 0F 8D FFFFFC70                  	JGE	L20
   429 000004F2 8B 95 FFFA687C                  	MOV	EDX,DWORD [-366468+EBP]
   430 000004F8 39 95 FFFCDFC8                  	CMP	DWORD [-204856+EBP],EDX
   431 000004FE 7D 06                           	JGE	L34
   432 00000500 89 95 FFFCDFC8                  	MOV	DWORD [-204856+EBP],EDX
   433 00000506                                 L34:
   434 00000506 43                              	INC	EBX
   435 00000507 81 C7 00000324                  	ADD	EDI,804
   436 0000050D 81 C6 000000C9                  	ADD	ESI,201
   437 00000513 39 C3                           	CMP	EBX,EAX
   438 00000515 C7 85 FFFA687C 00000000         	MOV	DWORD [-366468+EBP],0
   439 0000051F 0F 8D FFFFFC45                  	JGE	L21
   440 00000525 8A 84 1D FFFCDFD4               	MOV	AL,BYTE [-204844+EBP+EBX*1]
   441 0000052C FF 85 FFFCDFCC                  	INC	DWORD [-204852+EBP]
   442 00000532 3C 2C                           	CMP	AL,44
   443 00000534 74 0A                           	JE	L36
   444 00000536 3C 0A                           	CMP	AL,10
   445 00000538 74 06                           	JE	L36
   446 0000053A 3C 0D                           	CMP	AL,13
   447 0000053C 74 02                           	JE	L36
   448 0000053E 89 1F                           	MOV	DWORD [EDI],EBX
   449 00000540                                 L36:
   450 00000540 3C 22                           	CMP	AL,34
   451 00000542 0F 85 FFFFFC1A                  	JNE	L20
   452 00000548                                 L87:
   453 00000548 41                              	INC	ECX
   454 00000549 E9 FFFFFC14                     	JMP	L20
   455 0000054E                                 L94:
   456 0000054E 80 BC 1D FFFCDFD4 0A            	CMP	BYTE [-204844+EBP+EBX*1],10
   457 00000556 0F 85 FFFFFBFD                  	JNE	L32
   458 0000055C EB 86                           	JMP	L31
   459 0000055E                                 L93:
   460 0000055E FF 85 FFFA687C                  	INC	DWORD [-366468+EBP]
   461 00000564 8A 84 1D FFFCDFD4               	MOV	AL,BYTE [-204844+EBP+EBX*1]
   462 0000056B 3C 2C                           	CMP	AL,44
   463 0000056D 0F 84 FFFFFBDD                  	JE	L28
   464 00000573 3C 0A                           	CMP	AL,10
   465 00000575 0F 84 FFFFFBD5                  	JE	L28
   466 0000057B 3C 0D                           	CMP	AL,13
   467 0000057D 0F 84 FFFFFBCD                  	JE	L28
   468 00000583 8B 85 FFFA687C                  	MOV	EAX,DWORD [-366468+EBP]
   469 00000589 01 F0                           	ADD	EAX,ESI
   470 0000058B 89 9C 85 FFFA6884               	MOV	DWORD [-366460+EBP+EAX*4],EBX
   471 00000592 E9 FFFFFBB9                     	JMP	L28
   472 00000597                                 L92:
   473 00000597 83 FB 01                        	CMP	EBX,1
   474 0000059A 74 AC                           	JE	L87
   475 0000059C 85 C9                           	TEST	ECX,ECX
   476 0000059E 74 A8                           	JE	L87
   477 000005A0 8A 84 1D FFFCDFD4               	MOV	AL,BYTE [-204844+EBP+EBX*1]
   478 000005A7 3C 2C                           	CMP	AL,44
   479 000005A9 74 0C                           	JE	L27
   480 000005AB 3C 0A                           	CMP	AL,10
   481 000005AD 74 08                           	JE	L27
   482 000005AF 3C 0D                           	CMP	AL,13
   483 000005B1 0F 85 FFFFFB8C                  	JNE	L23
   484 000005B7                                 L27:
   485 000005B7 49                              	DEC	ECX
   486 000005B8 E9 FFFFFB86                     	JMP	L23
   487 000005BD                                 L16:
   488 000005BD 40                              	INC	EAX
   489 000005BE 80 38 20                        	CMP	BYTE [EAX],32
   490 000005C1 74 FA                           	JE	L16
   491 000005C3 E9 FFFFFAD3                     	JMP	L80
   492 000005C8                                 	GLOBAL	_setdec
   493 000005C8                                 _setdec:
   494 000005C8 55                              	PUSH	EBP
   495 000005C9 89 E5                           	MOV	EBP,ESP
   496 000005CB 56                              	PUSH	ESI
   497 000005CC 53                              	PUSH	EBX
   498 000005CD 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
   499 000005D0 8B 4D 10                        	MOV	ECX,DWORD [16+EBP]
   500 000005D3 8B 5D 0C                        	MOV	EBX,DWORD [12+EBP]
   501 000005D6                                 L104:
   502 000005D6 89 D0                           	MOV	EAX,EDX
   503 000005D8 BE 0000000A                     	MOV	ESI,10
   504 000005DD 99                              	CDQ
   505 000005DE F7 FE                           	IDIV	ESI
   506 000005E0 83 C2 30                        	ADD	EDX,48
   507 000005E3 88 14 19                        	MOV	BYTE [ECX+EBX*1],DL
   508 000005E6 89 C2                           	MOV	EDX,EAX
   509 000005E8 49                              	DEC	ECX
   510 000005E9 85 C0                           	TEST	EAX,EAX
   511 000005EB 74 04                           	JE	L105
   512 000005ED 85 C9                           	TEST	ECX,ECX
   513 000005EF 79 E5                           	JNS	L104
   514 000005F1                                 L105:
   515 000005F1 5B                              	POP	EBX
   516 000005F2 89 C8                           	MOV	EAX,ECX
   517 000005F4 5E                              	POP	ESI
   518 000005F5 5D                              	POP	EBP
   519 000005F6 C3                              	RET
   520 000005F7                                 	GLOBAL	_GetCellData
   521 000005F7                                 _GetCellData:
   522 000005F7 55                              	PUSH	EBP
   523 000005F8 83 C8 FF                        	OR	EAX,-1
   524 000005FB 89 E5                           	MOV	EBP,ESP
   525 000005FD 57                              	PUSH	EDI
   526 000005FE 56                              	PUSH	ESI
   527 000005FF 31 FF                           	XOR	EDI,EDI
   528 00000601 8B 55 10                        	MOV	EDX,DWORD [16+EBP]
   529 00000604 53                              	PUSH	EBX
   530 00000605 8B 75 0C                        	MOV	ESI,DWORD [12+EBP]
   531 00000608 31 DB                           	XOR	EBX,EBX
   532 0000060A 85 D2                           	TEST	EDX,EDX
   533 0000060C 78 47                           	JS	L109
   534 0000060E 80 BC 32 00027750 22            	CMP	BYTE [161616+EDX+ESI*1],34
   535 00000616 74 74                           	JE	L126
   536 00000618                                 L112:
   537 00000618 8A 8C 16 00027750               	MOV	CL,BYTE [161616+ESI+EDX*1]
   538 0000061F 42                              	INC	EDX
   539 00000620 3B 96 0002774C                  	CMP	EDX,DWORD [161612+ESI]
   540 00000626 7F 2B                           	JG	L113
   541 00000628 80 F9 0D                        	CMP	CL,13
   542 0000062B 74 26                           	JE	L113
   543 0000062D 80 F9 0A                        	CMP	CL,10
   544 00000630 74 21                           	JE	L113
   545 00000632 85 FF                           	TEST	EDI,EDI
   546 00000634 75 24                           	JNE	L125
   547 00000636 80 F9 2C                        	CMP	CL,44
   548 00000639 74 18                           	JE	L113
   549 0000063B                                 L118:
   550 0000063B 3B 5D 14                        	CMP	EBX,DWORD [20+EBP]
   551 0000063E 7D D8                           	JGE	L112
   552 00000640 80 F9 09                        	CMP	CL,9
   553 00000643 74 09                           	JE	L127
   554 00000645 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
   555 00000648 88 0C 03                        	MOV	BYTE [EBX+EAX*1],CL
   556 0000064B                                 L124:
   557 0000064B 43                              	INC	EBX
   558 0000064C EB CA                           	JMP	L112
   559 0000064E                                 L127:
   560 0000064E 83 C3 03                        	ADD	EBX,3
   561 00000651 EB F8                           	JMP	L124
   562 00000653                                 L113:
   563 00000653 89 D8                           	MOV	EAX,EBX
   564 00000655                                 L109:
   565 00000655 5B                              	POP	EBX
   566 00000656 5E                              	POP	ESI
   567 00000657 5F                              	POP	EDI
   568 00000658 5D                              	POP	EBP
   569 00000659 C3                              	RET
   570 0000065A                                 L125:
   571 0000065A 80 F9 22                        	CMP	CL,34
   572 0000065D 75 DC                           	JNE	L118
   573 0000065F 8A 84 32 00027750               	MOV	AL,BYTE [161616+EDX+ESI*1]
   574 00000666 3C 2C                           	CMP	AL,44
   575 00000668 74 E9                           	JE	L113
   576 0000066A 3C 0A                           	CMP	AL,10
   577 0000066C 74 E5                           	JE	L113
   578 0000066E 3C 0D                           	CMP	AL,13
   579 00000670 74 E1                           	JE	L113
   580 00000672 3C 22                           	CMP	AL,34
   581 00000674 75 C5                           	JNE	L118
   582 00000676 8A 84 32 00027751               	MOV	AL,BYTE [161617+EDX+ESI*1]
   583 0000067D 3C 2C                           	CMP	AL,44
   584 0000067F 74 BA                           	JE	L118
   585 00000681 3C 0A                           	CMP	AL,10
   586 00000683 74 B6                           	JE	L118
   587 00000685 3C 0D                           	CMP	AL,13
   588 00000687 74 B2                           	JE	L118
   589 00000689 42                              	INC	EDX
   590 0000068A EB AF                           	JMP	L118
   591 0000068C                                 L126:
   592 0000068C 42                              	INC	EDX
   593 0000068D BF 00000001                     	MOV	EDI,1
   594 00000692 EB 84                           	JMP	L112
   595 00000694                                 	GLOBAL	_PutCell
   596 00000694                                 _PutCell:
   597 00000694 55                              	PUSH	EBP
   598 00000695 89 E5                           	MOV	EBP,ESP
   599 00000697 57                              	PUSH	EDI
   600 00000698 56                              	PUSH	ESI
   601 00000699 31 F6                           	XOR	ESI,ESI
   602 0000069B 53                              	PUSH	EBX
   603 0000069C 83 EC 30                        	SUB	ESP,48
   604 0000069F 8B 7D 0C                        	MOV	EDI,DWORD [12+EBP]
   605 000006A2 C6 45 EE 00                     	MOV	BYTE [-18+EBP],0
   606 000006A6                                 L133:
   607 000006A6 C6 44 35 E4 20                  	MOV	BYTE [-28+EBP+ESI*1],32
   608 000006AB 46                              	INC	ESI
   609 000006AC 83 FE 09                        	CMP	ESI,9
   610 000006AF 7E F5                           	JLE	L133
   611 000006B1 BE 00000001                     	MOV	ESI,1
   612 000006B6 3B 35 [00000004]                	CMP	ESI,DWORD [_maxell_y]
   613 000006BC 7D 35                           	JGE	L168
   614 000006BE C7 45 CC 00000014               	MOV	DWORD [-52+EBP],20
   615 000006C5                                 L138:
   616 000006C5 6A 05                           	PUSH	5
   617 000006C7 8D 5D E4                        	LEA	EBX,DWORD [-28+EBP]
   618 000006CA 53                              	PUSH	EBX
   619 000006CB 46                              	INC	ESI
   620 000006CC 57                              	PUSH	EDI
   621 000006CD 47                              	INC	EDI
   622 000006CE E8 FFFFFEF5                     	CALL	_setdec
   623 000006D3 53                              	PUSH	EBX
   624 000006D4 6A 0A                           	PUSH	10
   625 000006D6 6A 0C                           	PUSH	12
   626 000006D8 6A 07                           	PUSH	7
   627 000006DA FF 75 CC                        	PUSH	DWORD [-52+EBP]
   628 000006DD 6A 02                           	PUSH	2
   629 000006DF E8 0000031C                     	CALL	_putstr
   630 000006E4 83 C4 24                        	ADD	ESP,36
   631 000006E7 83 45 CC 12                     	ADD	DWORD [-52+EBP],18
   632 000006EB 3B 35 [00000004]                	CMP	ESI,DWORD [_maxell_y]
   633 000006F1 7C D2                           	JL	L138
   634 000006F3                                 L168:
   635 000006F3 31 F6                           	XOR	ESI,ESI
   636 000006F5                                 L143:
   637 000006F5 C6 44 35 E4 20                  	MOV	BYTE [-28+EBP+ESI*1],32
   638 000006FA 46                              	INC	ESI
   639 000006FB 83 FE 09                        	CMP	ESI,9
   640 000006FE 7E F5                           	JLE	L143
   641 00000700 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
   642 00000703 BE 00000001                     	MOV	ESI,1
   643 00000708 BF 00000054                     	MOV	EDI,84
   644 0000070D 48                              	DEC	EAX
   645 0000070E                                 L144:
   646 0000070E 89 C3                           	MOV	EBX,EAX
   647 00000710 83 F8 19                        	CMP	EAX,25
   648 00000713 7E 16                           	JLE	L147
   649 00000715 BA 0000001A                     	MOV	EDX,26
   650 0000071A 89 D1                           	MOV	ECX,EDX
   651 0000071C 99                              	CDQ
   652 0000071D F7 F9                           	IDIV	ECX
   653 0000071F 89 45 C4                        	MOV	DWORD [-60+EBP],EAX
   654 00000722 8A 45 C4                        	MOV	AL,BYTE [-60+EBP]
   655 00000725 83 C0 40                        	ADD	EAX,64
   656 00000728 88 45 E8                        	MOV	BYTE [-24+EBP],AL
   657 0000072B                                 L147:
   658 0000072B BA 0000001A                     	MOV	EDX,26
   659 00000730 89 D8                           	MOV	EAX,EBX
   660 00000732 89 D1                           	MOV	ECX,EDX
   661 00000734 46                              	INC	ESI
   662 00000735 99                              	CDQ
   663 00000736 F7 F9                           	IDIV	ECX
   664 00000738 8D 42 41                        	LEA	EAX,DWORD [65+EDX]
   665 0000073B 88 45 E9                        	MOV	BYTE [-23+EBP],AL
   666 0000073E 8D 45 E4                        	LEA	EAX,DWORD [-28+EBP]
   667 00000741 50                              	PUSH	EAX
   668 00000742 6A 0A                           	PUSH	10
   669 00000744 6A 0C                           	PUSH	12
   670 00000746 6A 07                           	PUSH	7
   671 00000748 6A 02                           	PUSH	2
   672 0000074A 57                              	PUSH	EDI
   673 0000074B 83 C7 52                        	ADD	EDI,82
   674 0000074E E8 000002AD                     	CALL	_putstr
   675 00000753 83 C4 18                        	ADD	ESP,24
   676 00000756 8D 43 01                        	LEA	EAX,DWORD [1+EBX]
   677 00000759 3B 35 [00000000]                	CMP	ESI,DWORD [_maxell_x]
   678 0000075F 7C AD                           	JL	L144
   679 00000761 B8 00000001                     	MOV	EAX,1
   680 00000766 C7 45 E0 00000001               	MOV	DWORD [-32+EBP],1
   681 0000076D 3B 05 [00000004]                	CMP	EAX,DWORD [_maxell_y]
   682 00000773 0F 8D 000000C5                  	JGE	L172
   683 00000779 C7 45 D0 00000014               	MOV	DWORD [-48+EBP],20
   684 00000780                                 L164:
   685 00000780 BA 00000001                     	MOV	EDX,1
   686 00000785 C7 45 DC 00000001               	MOV	DWORD [-36+EBP],1
   687 0000078C 3B 15 [00000000]                	CMP	EDX,DWORD [_maxell_x]
   688 00000792 0F 8D 00000090                  	JGE	L174
   689 00000798 8B 4D 08                        	MOV	ECX,DWORD [8+EBP]
   690 0000079B 49                              	DEC	ECX
   691 0000079C C7 45 D8 00000054               	MOV	DWORD [-40+EBP],84
   692 000007A3 89 4D D4                        	MOV	DWORD [-44+EBP],ECX
   693 000007A6                                 L163:
   694 000007A6 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
   695 000007A9 8B 55 E0                        	MOV	EDX,DWORD [-32+EBP]
   696 000007AC 8B 5D D4                        	MOV	EBX,DWORD [-44+EBP]
   697 000007AF 31 F6                           	XOR	ESI,ESI
   698 000007B1 8D 7C 02 FE                     	LEA	EDI,DWORD [-2+EDX+EAX*1]
   699 000007B5                                 L161:
   700 000007B5 C6 44 35 E4 20                  	MOV	BYTE [-28+EBP+ESI*1],32
   701 000007BA 46                              	INC	ESI
   702 000007BB 83 FE 09                        	CMP	ESI,9
   703 000007BE 7E F5                           	JLE	L161
   704 000007C0 69 FF 000000C9                  	IMUL	EDI,EDI,201
   705 000007C6 8D 4D E4                        	LEA	ECX,DWORD [-28+EBP]
   706 000007C9 51                              	PUSH	ECX
   707 000007CA 6A 0A                           	PUSH	10
   708 000007CC 6A 07                           	PUSH	7
   709 000007CE 6A 00                           	PUSH	0
   710 000007D0 FF 75 D0                        	PUSH	DWORD [-48+EBP]
   711 000007D3 FF 75 D8                        	PUSH	DWORD [-40+EBP]
   712 000007D6 E8 00000225                     	CALL	_putstr
   713 000007DB 8D 4D E4                        	LEA	ECX,DWORD [-28+EBP]
   714 000007DE 8B 55 10                        	MOV	EDX,DWORD [16+EBP]
   715 000007E1 8D 04 3B                        	LEA	EAX,DWORD [EBX+EDI*1]
   716 000007E4 6A 0A                           	PUSH	10
   717 000007E6 FF 34 82                        	PUSH	DWORD [EDX+EAX*4]
   718 000007E9 52                              	PUSH	EDX
   719 000007EA 51                              	PUSH	ECX
   720 000007EB E8 FFFFFE07                     	CALL	_GetCellData
   721 000007F0 83 C4 28                        	ADD	ESP,40
   722 000007F3 85 C0                           	TEST	EAX,EAX
   723 000007F5 78 18                           	JS	L155
   724 000007F7 8D 45 E4                        	LEA	EAX,DWORD [-28+EBP]
   725 000007FA 50                              	PUSH	EAX
   726 000007FB 6A 0A                           	PUSH	10
   727 000007FD 6A 07                           	PUSH	7
   728 000007FF 6A 00                           	PUSH	0
   729 00000801 FF 75 D0                        	PUSH	DWORD [-48+EBP]
   730 00000804 FF 75 D8                        	PUSH	DWORD [-40+EBP]
   731 00000807 E8 000001F4                     	CALL	_putstr
   732 0000080C 83 C4 18                        	ADD	ESP,24
   733 0000080F                                 L155:
   734 0000080F FF 45 DC                        	INC	DWORD [-36+EBP]
   735 00000812 FF 45 D4                        	INC	DWORD [-44+EBP]
   736 00000815 8B 55 DC                        	MOV	EDX,DWORD [-36+EBP]
   737 00000818 83 45 D8 52                     	ADD	DWORD [-40+EBP],82
   738 0000081C 3B 15 [00000000]                	CMP	EDX,DWORD [_maxell_x]
   739 00000822 0F 8C FFFFFF7E                  	JL	L163
   740 00000828                                 L174:
   741 00000828 FF 45 E0                        	INC	DWORD [-32+EBP]
   742 0000082B 8B 4D E0                        	MOV	ECX,DWORD [-32+EBP]
   743 0000082E 83 45 D0 12                     	ADD	DWORD [-48+EBP],18
   744 00000832 3B 0D [00000004]                	CMP	ECX,DWORD [_maxell_y]
   745 00000838 0F 8C FFFFFF42                  	JL	L164
   746 0000083E                                 L172:
   747 0000083E 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   748 00000841 5B                              	POP	EBX
   749 00000842 5E                              	POP	ESI
   750 00000843 5F                              	POP	EDI
   751 00000844 5D                              	POP	EBP
   752 00000845 C3                              	RET
   753 00000846                                 	GLOBAL	_Putcellinfo
   754 00000846                                 _Putcellinfo:
   755 00000846 55                              	PUSH	EBP
   756 00000847 89 E5                           	MOV	EBP,ESP
   757 00000849 57                              	PUSH	EDI
   758 0000084A 56                              	PUSH	ESI
   759 0000084B BF 00000008                     	MOV	EDI,8
   760 00000850 53                              	PUSH	EBX
   761 00000851 BE 00000008                     	MOV	ESI,8
   762 00000856 83 EC 0C                        	SUB	ESP,12
   763 00000859 31 DB                           	XOR	EBX,EBX
   764 0000085B 6B 0D [00000000] 52             	IMUL	ECX,DWORD [_maxell_x],82
   765 00000862 89 C8                           	MOV	EAX,ECX
   766 00000864 89 65 F0                        	MOV	DWORD [-16+EBP],ESP
   767 00000867 99                              	CDQ
   768 00000868 F7 FE                           	IDIV	ESI
   769 0000086A 8D 40 13                        	LEA	EAX,DWORD [19+EAX]
   770 0000086D 83 E0 FC                        	AND	EAX,-4
   771 00000870 E8 [00000000]                   	CALL	__alloca
   772 00000875 89 C8                           	MOV	EAX,ECX
   773 00000877 99                              	CDQ
   774 00000878 F7 FF                           	IDIV	EDI
   775 0000087A 8D 74 24 0F                     	LEA	ESI,DWORD [15+ESP]
   776 0000087E 83 E6 F0                        	AND	ESI,-16
   777 00000881 39 C3                           	CMP	EBX,EAX
   778 00000883 7D 1A                           	JGE	L186
   779 00000885                                 L182:
   780 00000885 C6 04 1E 20                     	MOV	BYTE [ESI+EBX*1],32
   781 00000889 B9 00000008                     	MOV	ECX,8
   782 0000088E 6B 15 [00000000] 52             	IMUL	EDX,DWORD [_maxell_x],82
   783 00000895 89 D0                           	MOV	EAX,EDX
   784 00000897 43                              	INC	EBX
   785 00000898 99                              	CDQ
   786 00000899 F7 F9                           	IDIV	ECX
   787 0000089B 39 C3                           	CMP	EBX,EAX
   788 0000089D 7C E6                           	JL	L182
   789 0000089F                                 L186:
   790 0000089F C6 06 28                        	MOV	BYTE [ESI],40
   791 000008A2 BF 00000008                     	MOV	EDI,8
   792 000008A7 C6 46 09 29                     	MOV	BYTE [9+ESI],41
   793 000008AB 6B 05 [00000000] 52             	IMUL	EAX,DWORD [_maxell_x],82
   794 000008B2 99                              	CDQ
   795 000008B3 F7 FF                           	IDIV	EDI
   796 000008B5 C6 04 06 00                     	MOV	BYTE [ESI+EAX*1],0
   797 000008B9 6A 07                           	PUSH	7
   798 000008BB 56                              	PUSH	ESI
   799 000008BC 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
   800 000008BF 40                              	INC	EAX
   801 000008C0 50                              	PUSH	EAX
   802 000008C1 E8 FFFFFD02                     	CALL	_setdec
   803 000008C6 83 C4 0C                        	ADD	ESP,12
   804 000008C9 89 C3                           	MOV	EBX,EAX
   805 000008CB BA 0000001A                     	MOV	EDX,26
   806 000008D0 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
   807 000008D3 89 D1                           	MOV	ECX,EDX
   808 000008D5 99                              	CDQ
   809 000008D6 F7 F9                           	IDIV	ECX
   810 000008D8 89 45 E8                        	MOV	DWORD [-24+EBP],EAX
   811 000008DB 8D 42 41                        	LEA	EAX,DWORD [65+EDX]
   812 000008DE 88 04 1E                        	MOV	BYTE [ESI+EBX*1],AL
   813 000008E1 4B                              	DEC	EBX
   814 000008E2 83 7D 08 19                     	CMP	DWORD [8+EBP],25
   815 000008E6 7E 09                           	JLE	L183
   816 000008E8 8A 45 E8                        	MOV	AL,BYTE [-24+EBP]
   817 000008EB 83 C0 40                        	ADD	EAX,64
   818 000008EE 88 04 1E                        	MOV	BYTE [ESI+EBX*1],AL
   819 000008F1                                 L183:
   820 000008F1 6A 08                           	PUSH	8
   821 000008F3 6A 29                           	PUSH	41
   822 000008F5 6B 05 [00000000] 52             	IMUL	EAX,DWORD [_maxell_x],82
   823 000008FC 99                              	CDQ
   824 000008FD F7 FF                           	IDIV	EDI
   825 000008FF 8D 04 C5 00000006               	LEA	EAX,DWORD [6+EAX*8]
   826 00000906 50                              	PUSH	EAX
   827 00000907 6A 1A                           	PUSH	26
   828 00000909 6A 06                           	PUSH	6
   829 0000090B FF 35 [0000003C]                	PUSH	DWORD [_win]
   830 00000911 E8 [00000000]                   	CALL	_api_boxfilwin
   831 00000916 56                              	PUSH	ESI
   832 00000917 6B 05 [00000000] 52             	IMUL	EAX,DWORD [_maxell_x],82
   833 0000091E 99                              	CDQ
   834 0000091F F7 FF                           	IDIV	EDI
   835 00000921 50                              	PUSH	EAX
   836 00000922 6A 00                           	PUSH	0
   837 00000924 6A 1A                           	PUSH	26
   838 00000926 6A 06                           	PUSH	6
   839 00000928 FF 35 [0000003C]                	PUSH	DWORD [_win]
   840 0000092E E8 [00000000]                   	CALL	_api_putstrwin
   841 00000933 83 C4 30                        	ADD	ESP,48
   842 00000936 6B 05 [00000000] 52             	IMUL	EAX,DWORD [_maxell_x],82
   843 0000093D 99                              	CDQ
   844 0000093E F7 FF                           	IDIV	EDI
   845 00000940 83 E8 0C                        	SUB	EAX,12
   846 00000943 50                              	PUSH	EAX
   847 00000944 8B 7D 0C                        	MOV	EDI,DWORD [12+EBP]
   848 00000947 8B 55 10                        	MOV	EDX,DWORD [16+EBP]
   849 0000094A 69 FF 000000C9                  	IMUL	EDI,EDI,201
   850 00000950 89 F8                           	MOV	EAX,EDI
   851 00000952 03 45 08                        	ADD	EAX,DWORD [8+EBP]
   852 00000955 FF 34 82                        	PUSH	DWORD [EDX+EAX*4]
   853 00000958 52                              	PUSH	EDX
   854 00000959 56                              	PUSH	ESI
   855 0000095A E8 FFFFFC98                     	CALL	_GetCellData
   856 0000095F 83 C4 10                        	ADD	ESP,16
   857 00000962 85 C0                           	TEST	EAX,EAX
   858 00000964 78 1A                           	JS	L184
   859 00000966 C6 04 06 00                     	MOV	BYTE [ESI+EAX*1],0
   860 0000096A 56                              	PUSH	ESI
   861 0000096B 50                              	PUSH	EAX
   862 0000096C 6A 00                           	PUSH	0
   863 0000096E 6A 1A                           	PUSH	26
   864 00000970 6A 56                           	PUSH	86
   865 00000972 FF 35 [0000003C]                	PUSH	DWORD [_win]
   866 00000978 E8 [00000000]                   	CALL	_api_putstrwin
   867 0000097D 83 C4 18                        	ADD	ESP,24
   868 00000980                                 L184:
   869 00000980 8B 65 F0                        	MOV	ESP,DWORD [-16+EBP]
   870 00000983 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   871 00000986 5B                              	POP	EBX
   872 00000987 5E                              	POP	ESI
   873 00000988 5F                              	POP	EDI
   874 00000989 5D                              	POP	EBP
   875 0000098A C3                              	RET
   876 0000098B                                 	GLOBAL	_my_drawboxId
   877 0000098B                                 _my_drawboxId:
   878 0000098B 55                              	PUSH	EBP
   879 0000098C 89 E5                           	MOV	EBP,ESP
   880 0000098E 57                              	PUSH	EDI
   881 0000098F 56                              	PUSH	ESI
   882 00000990 53                              	PUSH	EBX
   883 00000991 53                              	PUSH	EBX
   884 00000992 6B 75 10 12                     	IMUL	ESI,DWORD [16+EBP],18
   885 00000996 6B 5D 0C 52                     	IMUL	EBX,DWORD [12+EBP],82
   886 0000099A FF 75 08                        	PUSH	DWORD [8+EBP]
   887 0000099D 8D 46 2A                        	LEA	EAX,DWORD [42+ESI]
   888 000009A0 8D 7B 58                        	LEA	EDI,DWORD [88+EBX]
   889 000009A3 50                              	PUSH	EAX
   890 000009A4 83 C3 06                        	ADD	EBX,6
   891 000009A7 57                              	PUSH	EDI
   892 000009A8 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   893 000009AB 50                              	PUSH	EAX
   894 000009AC 83 C6 3C                        	ADD	ESI,60
   895 000009AF 53                              	PUSH	EBX
   896 000009B0 FF 35 [0000003C]                	PUSH	DWORD [_win]
   897 000009B6 E8 [00000000]                   	CALL	_api_linewin
   898 000009BB FF 75 08                        	PUSH	DWORD [8+EBP]
   899 000009BE 56                              	PUSH	ESI
   900 000009BF 57                              	PUSH	EDI
   901 000009C0 56                              	PUSH	ESI
   902 000009C1 53                              	PUSH	EBX
   903 000009C2 FF 35 [0000003C]                	PUSH	DWORD [_win]
   904 000009C8 E8 [00000000]                   	CALL	_api_linewin
   905 000009CD 83 C4 30                        	ADD	ESP,48
   906 000009D0 FF 75 08                        	PUSH	DWORD [8+EBP]
   907 000009D3 56                              	PUSH	ESI
   908 000009D4 53                              	PUSH	EBX
   909 000009D5 FF 75 F0                        	PUSH	DWORD [-16+EBP]
   910 000009D8 53                              	PUSH	EBX
   911 000009D9 FF 35 [0000003C]                	PUSH	DWORD [_win]
   912 000009DF E8 [00000000]                   	CALL	_api_linewin
   913 000009E4 FF 75 08                        	PUSH	DWORD [8+EBP]
   914 000009E7 56                              	PUSH	ESI
   915 000009E8 57                              	PUSH	EDI
   916 000009E9 FF 75 F0                        	PUSH	DWORD [-16+EBP]
   917 000009EC 57                              	PUSH	EDI
   918 000009ED FF 35 [0000003C]                	PUSH	DWORD [_win]
   919 000009F3 E8 [00000000]                   	CALL	_api_linewin
   920 000009F8 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   921 000009FB 5B                              	POP	EBX
   922 000009FC 5E                              	POP	ESI
   923 000009FD 5F                              	POP	EDI
   924 000009FE 5D                              	POP	EBP
   925 000009FF C3                              	RET
   926 00000A00                                 	GLOBAL	_putstr
   927 00000A00                                 _putstr:
   928 00000A00 55                              	PUSH	EBP
   929 00000A01 89 E5                           	MOV	EBP,ESP
   930 00000A03 57                              	PUSH	EDI
   931 00000A04 56                              	PUSH	ESI
   932 00000A05 53                              	PUSH	EBX
   933 00000A06 56                              	PUSH	ESI
   934 00000A07 56                              	PUSH	ESI
   935 00000A08 8B 45 10                        	MOV	EAX,DWORD [16+EBP]
   936 00000A0B 8B 55 1C                        	MOV	EDX,DWORD [28+EBP]
   937 00000A0E 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   938 00000A11 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
   939 00000A14 8B 45 14                        	MOV	EAX,DWORD [20+EBP]
   940 00000A17 8B 5D 0C                        	MOV	EBX,DWORD [12+EBP]
   941 00000A1A 8B 7D 18                        	MOV	EDI,DWORD [24+EBP]
   942 00000A1D 89 55 EC                        	MOV	DWORD [-20+EBP],EDX
   943 00000A20 83 F8 07                        	CMP	EAX,7
   944 00000A23 74 4F                           	JE	L189
   945 00000A25 50                              	PUSH	EAX
   946 00000A26 8D 43 3A                        	LEA	EAX,DWORD [58+EBX]
   947 00000A29 50                              	PUSH	EAX
   948 00000A2A 8D 44 FE 06                     	LEA	EAX,DWORD [6+ESI+EDI*8]
   949 00000A2E                                 L191:
   950 00000A2E 50                              	PUSH	EAX
   951 00000A2F 8D 43 2A                        	LEA	EAX,DWORD [42+EBX]
   952 00000A32 50                              	PUSH	EAX
   953 00000A33 8D 46 06                        	LEA	EAX,DWORD [6+ESI]
   954 00000A36 50                              	PUSH	EAX
   955 00000A37 FF 35 [0000003C]                	PUSH	DWORD [_win]
   956 00000A3D E8 [00000000]                   	CALL	_api_boxfilwin
   957 00000A42 8B 55 F0                        	MOV	EDX,DWORD [-16+EBP]
   958 00000A45 8B 45 EC                        	MOV	EAX,DWORD [-20+EBP]
   959 00000A48 89 7D 18                        	MOV	DWORD [24+EBP],EDI
   960 00000A4B 89 45 1C                        	MOV	DWORD [28+EBP],EAX
   961 00000A4E 89 55 14                        	MOV	DWORD [20+EBP],EDX
   962 00000A51 8D 43 2A                        	LEA	EAX,DWORD [42+EBX]
   963 00000A54 83 C4 18                        	ADD	ESP,24
   964 00000A57 89 45 10                        	MOV	DWORD [16+EBP],EAX
   965 00000A5A 8D 46 06                        	LEA	EAX,DWORD [6+ESI]
   966 00000A5D 89 45 0C                        	MOV	DWORD [12+EBP],EAX
   967 00000A60 A1 [0000003C]                   	MOV	EAX,DWORD [_win]
   968 00000A65 89 45 08                        	MOV	DWORD [8+EBP],EAX
   969 00000A68 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   970 00000A6B 5B                              	POP	EBX
   971 00000A6C 5E                              	POP	ESI
   972 00000A6D 5F                              	POP	EDI
   973 00000A6E 5D                              	POP	EBP
   974 00000A6F E9 [00000000]                   	JMP	_api_putstrwin
   975 00000A74                                 L189:
   976 00000A74 8D 43 39                        	LEA	EAX,DWORD [57+EBX]
   977 00000A77 6A 07                           	PUSH	7
   978 00000A79 50                              	PUSH	EAX
   979 00000A7A 8D 44 FE 05                     	LEA	EAX,DWORD [5+ESI+EDI*8]
   980 00000A7E EB AE                           	JMP	L191
   981                                          [SECTION .data]
   982 0000003A 00 00                           	ALIGNB	4
   983 0000003C                                 _win:
   984 0000003C 00 00 00 00                     	RESB	4
